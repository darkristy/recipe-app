// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum role {
  user
  admin
}

model user {
  id           String   @id @default(uuid())
  email        String   @unique
  username     String   @unique
  password     String   @unique
  tokenVersion Int      @default(0)
  role         role     @default(user)
  recipes      recipe[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  deletedAt    DateTime @default(now())
}

model ingredient {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  deletedAt        DateTime           @default(now())
  recipeIngredient recipeIngredient[]
}

model measurmentUnit {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  recipeIngredient recipeIngredient[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now())
  deletedAt        DateTime           @default(now())
}

model recipeIngredient {
  id               Int            @id @default(autoincrement())
  recipe           recipe         @relation(fields: [recipeId], references: [id])
  ingredient       ingredient     @relation(fields: [ingredientId], references: [id])
  measurmentQty    String
  measurmentUnit   measurmentUnit @relation(fields: [measurmentUnitId], references: [id])
  recipeId         Int
  ingredientId     Int
  measurmentUnitId Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  deletedAt        DateTime       @default(now())

}

model instruction {
  id          Int      @id @default(autoincrement())
  description String
  recipe      recipe   @relation(fields: [recipeId], references: [id])
  recipeId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  deletedAt   DateTime @default(now())
}

model cuisine {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  recipes   recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime @default(now())
}

model recipe {
  id           Int                @id @default(autoincrement())
  name         String             @unique
  imageUrl     String             @unique
  bookmarked   Boolean            @default(false)
  cookTime     DateTime
  prepTime     DateTime
  ingredients  recipeIngredient[]
  instructions instruction[]
  cuisine      cuisine            @relation(fields: [cuisineId], references: [id])
  user         user               @relation(fields: [userId], references: [id])
  userId       String
  cuisineId    Int
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @default(now())
  deletedAt    DateTime           @default(now())
}
